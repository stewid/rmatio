*** matio.h.orig	2017-07-28 11:24:18.833606798 +0200
--- matio.h	2017-07-28 11:20:59.265357026 +0200
***************
*** 30,43 ****
   * POSSIBILITY OF SUCH DAMAGE.
   */
  
  #ifndef MATIO_H
  #define MATIO_H
  
  #include <stdlib.h>
  #include <stdio.h>
! #include "matio_pubconf.h"
! 
! #include <stdarg.h>
  
  #ifdef __cplusplus
  #   define EXTERN extern "C"
--- 30,54 ----
   * POSSIBILITY OF SUCH DAMAGE.
   */
  
+ /*
+  * Changes in the R package rmatio:
+  *
+  * - The io routines have been adopted to use R printing and error routines.
+  *   See the R manual Writing R Extensions
+  */
+ 
  #ifndef MATIO_H
  #define MATIO_H
  
+ #include <Rdefines.h>
+ #define Mat_Critical Rf_error
+ #define Mat_Warning Rf_warning
+ #define strdup_printf(format, str) strdup((str))
+ #define mat_snprintf snprintf
+ 
  #include <stdlib.h>
  #include <stdio.h>
! #include "config.h"
  
  #ifdef __cplusplus
  #   define EXTERN extern "C"
***************
*** 123,129 ****
      MAT_C_UINT32   = 13, /**< @brief Matlab unsigned 32-bit integer class  */
      MAT_C_INT64    = 14, /**< @brief Matlab signed 64-bit integer class    */
      MAT_C_UINT64   = 15, /**< @brief Matlab unsigned 64-bit integer class  */
!     MAT_C_FUNCTION = 16  /**< @brief Matlab function class                 */
  };
  
  /** @brief Matlab array flags
--- 134,141 ----
      MAT_C_UINT32   = 13, /**< @brief Matlab unsigned 32-bit integer class  */
      MAT_C_INT64    = 14, /**< @brief Matlab signed 64-bit integer class    */
      MAT_C_UINT64   = 15, /**< @brief Matlab unsigned 64-bit integer class  */
!     MAT_C_FUNCTION = 16, /**< @brief Matlab function class                 */
!     MAT_C_OPAQUE   = 17  /**< @brief Matlab function workspace?            */
  };
  
  /** @brief Matlab array flags
***************
*** 223,244 ****
  /* Library function */
  EXTERN void Mat_GetLibraryVersion(int *major,int *minor,int *release);
  
  /*     io.c         */
! EXTERN char  *strdup_vprintf(const char *format, va_list ap);
! EXTERN char  *strdup_printf(const char *format, ...);
! EXTERN int    Mat_SetVerbose( int verb, int s );
! EXTERN int    Mat_SetDebug( int d );
! EXTERN void   Mat_Critical( const char *format, ... );
! EXTERN MATIO_NORETURN void Mat_Error( const char *format, ... ) MATIO_NORETURNATTR;
! EXTERN void   Mat_Help( const char *helpstr[] );
! EXTERN int    Mat_LogInit( const char *progname );
! EXTERN int    Mat_LogClose(void);
! EXTERN int    Mat_LogInitFunc(const char *prog_name,
!                   void (*log_func)(int log_level, char *message) );
! EXTERN int    Mat_Message( const char *format, ... );
! EXTERN int    Mat_DebugMessage( int level, const char *format, ... );
! EXTERN int    Mat_VerbMessage( int level, const char *format, ... );
! EXTERN void   Mat_Warning( const char *format, ... );
  EXTERN size_t Mat_SizeOf(enum matio_types data_type);
  EXTERN size_t Mat_SizeOfClass(int class_type);
  
--- 235,257 ----
  /* Library function */
  EXTERN void Mat_GetLibraryVersion(int *major,int *minor,int *release);
  
+ /* Stefan Widgren 2014-01-01: Not used by rmatio */
  /*     io.c         */
! /* EXTERN char  *strdup_vprintf(const char *format, va_list ap); */
! /* EXTERN char  *strdup_printf(const char *format, ...); */
! /* EXTERN int    Mat_SetVerbose( int verb, int s ); */
! /* EXTERN int    Mat_SetDebug( int d ); */
! /* EXTERN void   Mat_Critical( const char *format, ... ); */
! /* EXTERN MATIO_NORETURN void Mat_Error( const char *format, ... ) MATIO_NORETURNATTR; */
! /* EXTERN void   Mat_Help( const char *helpstr[] ); */
! /* EXTERN int    Mat_LogInit( const char *progname ); */
! /* EXTERN int    Mat_LogClose(void); */
! /* EXTERN int    Mat_LogInitFunc(const char *prog_name, */
! /*                   void (*log_func)(int log_level, char *message) ); */
! /* EXTERN int    Mat_Message( const char *format, ... ); */
! /* EXTERN int    Mat_DebugMessage( int level, const char *format, ... ); */
! /* EXTERN int    Mat_VerbMessage( int level, const char *format, ... ); */
! /* EXTERN void   Mat_Warning( const char *format, ... ); */
  EXTERN size_t Mat_SizeOf(enum matio_types data_type);
  EXTERN size_t Mat_SizeOfClass(int class_type);
  
***************
*** 260,266 ****
                        void *data,int opt);
  EXTERN matvar_t  *Mat_VarCreateStruct(const char *name,int rank,size_t *dims,
                        const char **fields,unsigned nfields);
! EXTERN int        Mat_VarDelete(mat_t *mat, const char *name);
  EXTERN matvar_t  *Mat_VarDuplicate(const matvar_t *in, int opt);
  EXTERN void       Mat_VarFree(matvar_t *matvar);
  EXTERN matvar_t  *Mat_VarGetCell(matvar_t *matvar,int index);
--- 273,284 ----
                        void *data,int opt);
  EXTERN matvar_t  *Mat_VarCreateStruct(const char *name,int rank,size_t *dims,
                        const char **fields,unsigned nfields);
! 
! /* Stefan Widgren 2014-01-05: Commented out the following unused
!  * function in the rmatio package to silent compiler warning (implicit
!  * declaration of mktemp) on windows. */
! /* EXTERN int        Mat_VarDelete(mat_t *mat, const char *name); */
! 
  EXTERN matvar_t  *Mat_VarDuplicate(const matvar_t *in, int opt);
  EXTERN void       Mat_VarFree(matvar_t *matvar);
  EXTERN matvar_t  *Mat_VarGetCell(matvar_t *matvar,int index);
