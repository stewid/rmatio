*** read_data.c.orig	2019-11-16 17:05:21.824425179 +0100
--- read_data.c	2019-11-16 17:07:59.865925420 +0100
***************
*** 28,44 ****
   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   */
  
! /* FIXME: Implement Unicode support */
! #include <stddef.h>
! #include <stdlib.h>
! #include <string.h>
! #include <stdio.h>
! #include <math.h>
! #include <time.h>
  #include "matio_private.h"
! #if defined(HAVE_ZLIB)
! #   include <zlib.h>
! #endif
  
  #if !defined(READ_BLOCK_SIZE)
  #define READ_BLOCK_SIZE (256)
--- 28,56 ----
   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   */
  
! /*
!  * Changes in the R package rmatio:
!  *
!  * - The io routines have been adopted to use R printing and error routines.
!  *   See the R manual Writing R Extensions
!  *
!  */
! 
! /* Stefan Widgren 2014-01-04: Include files for rmatio package */
! #include <R.h>
  #include "matio_private.h"
! 
! /* /\* FIXME: Implement Unicode support *\/ */
! /* #include <stddef.h> */
! /* #include <stdlib.h> */
! /* #include <string.h> */
! /* #include <stdio.h> */
! /* #include <math.h> */
! /* #include <time.h> */
! /* #include "matio_private.h" */
! /* #if defined(HAVE_ZLIB) */
! /* #   include <zlib.h> */
! /* #endif */
  
  #if !defined(READ_BLOCK_SIZE)
  #define READ_BLOCK_SIZE (256)
***************
*** 2205,2211 ****
      enum matio_classes class_type,enum matio_types data_type,size_t *dims,
      int *start,int *stride,int *edge)
  {
!     int nBytes = 0, i, j, err;
      int pos, row_stride, col_stride;
      z_stream z_copy = {0,};
  
--- 2217,2223 ----
      enum matio_classes class_type,enum matio_types data_type,size_t *dims,
      int *start,int *stride,int *edge)
  {
!     int nBytes = 0, i, j;
      int pos, row_stride, col_stride;
      z_stream z_copy = {0,};
  
***************
*** 2214,2220 ****
          return 0;
      }
  
!     err = inflateCopy(&z_copy,z);
      switch ( class_type ) {
          case MAT_C_DOUBLE:
          {
--- 2226,2232 ----
          return 0;
      }
  
!     inflateCopy(&z_copy,z);
      switch ( class_type ) {
          case MAT_C_DOUBLE:
          {
