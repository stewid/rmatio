*** read_data.c.orig	2017-07-20 16:45:19.832393611 +0200
--- read_data.c	2017-07-20 16:43:29.276492398 +0200
***************
*** 30,45 ****
   * POSSIBILITY OF SUCH DAMAGE.
   */
  
! /* FIXME: Implement Unicode support */
! #include <stdlib.h>
! #include <string.h>
! #include <stdio.h>
! #include <math.h>
! #include <time.h>
  #include "matio_private.h"
! #if defined(HAVE_ZLIB)
! #   include <zlib.h>
! #endif
  
  /*
   * --------------------------------------------------------------------------
--- 30,59 ----
   * POSSIBILITY OF SUCH DAMAGE.
   */
  
! /*
!  * Changes in the R package rmatio:
!  *
!  * - The io routines have been adopted to use R printing and error routines.
!  *   See the R manual Writing R Extensions
!  *
!  */
! 
! /* Stefan Widgren 2014-01-04: Include files for rmatio package */
! #include <R.h>
  #include "matio_private.h"
! #define Mat_Critical error
! 
! /* FIXME: Implement Unicode support */
! /* #include <stdlib.h> */
! /* #include <string.h> */
! /* #include <stdio.h> */
! /* #include <math.h> */
! /* #include <time.h> */
! /* #include "matio_private.h" */
! 
! /* #if defined(HAVE_ZLIB) */
! /* #   include <zlib.h> */
! /* #endif */
  
  /*
   * --------------------------------------------------------------------------
***************
*** 3571,3577 ****
              break;
          }
          default:
!             printf("Character data not supported type: %d",data_type);
              break;
      }
      nBytes = len*data_size;
--- 3585,3591 ----
              break;
          }
          default:
!             Rprintf("Character data not supported type: %d",data_type);
              break;
      }
      nBytes = len*data_size;
***************
*** 3616,3622 ****
              break;
          }
          default:
!             printf("Character data not supported type: %d",data_type);
              break;
      }
      bytesread *= data_size;
--- 3630,3636 ----
              break;
          }
          default:
!             Rprintf("Character data not supported type: %d",data_type);
              break;
      }
      bytesread *= data_size;
